#!/usr/bin/bash -x

groupadd -r puppet
useradd -d /var/lib/puppet -g puppet -M -r puppet
cd /root
# Set the dns info and hostname; must be done before puppet
cat <<EOF > /etc/resolv.conf
domain puppetlabs.vm
nameserver 8.8.8.8
EOF
sed -i 's/HOSTNAME.*/HOSTNAME=<%= $settings[:hostname] %>/' /etc/sysconfig/network
hostname <%= $settings[:hostname] %>

sed -i 's/127\.0\.0\.1.*/\0 <%= $settings[:hostname] %> <%= $settings[:hostname].split('.')[0] %>/' /etc/hosts
<% if $settings[:vmtype] == "learning" %>
<% if File.extname($settings[:pe_tarball]) == ".gz" %>
tar zmxf /root/<%= $settings[:pe_tarball] %>
<% tname = File.basename($settings[:pe_tarball], ".gz") %>
<% fname = File.basename(tname, ".tar") %>
<% elsif File.extname($settings[:pe_tarball]) == ".tar" %>
tar mxf /root/<%= $settings[:pe_tarball] %>
<% fname = File.basename($settings[:pe_tarball], ".tar") %>
<% else abort("Not sure what type of file #{$settings[:pe_tarball]} is") %>
<% end %>
ln -s /root/<%= fname %> /root/puppet-enterprise
rm -f /root/<%= $settings[:pe_tarball] %>
<% end %>

# Cache agent tarball for pe_repo
mkdir -p /usr/src/installer
mkdir -p /usr/src/installer/<%= @real_pe_ver %>
mv /root/<%= $settings[:agent_tarball] %> /usr/src/installer/<%= @real_pe_ver %>/

# put verification script links in personal bin directory
<% if $settings[:vmtype] == "training" %>
ln -s /usr/src/puppetlabs-training-bootstrap/scripts/classroom /root/bin
<% end %>
yum -y install git ruby augeas ruby-augeas rubygems patch rubygem-json
yum -y upgrade #This takes a while
echo "Puppet Labs <%= $settings[:vmtype].to_s.capitalize %> VM <%= @ptb_version %> (Build <%= @ptb_build %>)" > /etc/puppetlabs-release
# Don't prompt us to accept ssh host keys for github
mkdir -p ~/.ssh/
echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
cd /usr/src
git clone git://github.com/puppetlabs/puppet.git puppet
cd puppet && git remote rename origin ks && git remote add origin git://github.com/puppetlabs/puppet.git && git fetch origin && git branch --set-upstream master origin/master && git checkout master ; cd /usr/src
git clone git://github.com/puppetlabs/facter.git facter
cd facter && git remote rename origin ks && git remote add origin git://github.com/puppetlabs/facter.git && git fetch origin && git branch --set-upstream master origin/master && git checkout 1.7.1 ; cd /usr/src
git clone git://github.com/puppetlabs/hiera.git hiera
cd hiera && git remote rename origin ks && git remote add origin git://github.com/puppetlabs/hiera.git && git fetch origin && git branch --set-upstream master origin/master && git checkout 1.2.1 ; cd /usr/src
git clone <%= @ptbrepo %> puppetlabs-training-bootstrap
cd puppetlabs-training-bootstrap && git checkout <%= @ptbbranch %>
cd /root
RUBYLIB=/usr/src/puppet/lib:/usr/src/facter/lib:/usr/src/hiera/lib
export RUBYLIB
/usr/src/puppet/bin/puppet apply --modulepath=/usr/src/puppetlabs-training-bootstrap/modules --verbose /usr/src/puppetlabs-training-bootstrap/manifests/site.pp
# Cleanup from the puppet run
rm -rf /var/lib/puppet
rm -rf /usr/src/puppet /usr/src/facter /usr/src/hiera /usr/src/puppetlabs-training-bootstrap
# Ensure ethernet interface is still eth0
rm -rf /etc/udev/rules.d/70-persistent-net.rules
sed -i -e '/^HWADDR.*/d' /etc/sysconfig/network-scripts/ifcfg-eth0
rm -rf /var/cache/yum/*
yum -y clean all
sync
sync